#+title: Git

* Gitconfig
#+begin_src conf :tangle .config/git/config
[user]
	email = ody55eus@mailbox.org
	name = Jonathan Pieper
	signingkey = 885B941B822133216D960E4CDE2AD6CF2474B880
[gpg]
	program = gpg
[init]
	defaultBranch = main
[gitlab "gitlab.ody5.de/api/v4"]
	user = ody55eus
[pull]
	rebase = false
	ff = only
[core]
	excludesfile = ~/.config/git/ignore
	attributesfile = ~/.config/git/attributes
	pager = nvim -R
	sshCommand = ssh
[diff]
	tool = ediff
	guitool = ediff
[merge]
	tool = ediff
[diff "lisp"]
	xfuncname = "^(\\(.*)$"
[diff "org"]
	xfuncname = "^(\\*+ +.*)$"
[difftool "ediff"]
    cmd = ~/.local/bin/ediff.sh $LOCAL $REMOTE $MERGED
[merge]
    tool = ediff
[mergetool "ediff"]
    cmd = ~/.local/bin/ediff.sh $LOCAL $REMOTE $MERGED $BASE
    trueExitCode = true
[color]
	pager = no
[safe]
	directory = /home/jp/share/org
	directory = /home/jp/share/notes
	directory = /home/jp/share/Projects/Code/01_2fa_demo
	directory = /home/jp/share/Projects/Doc/frontdesk-documentation
	directory = /home/jp/share/Projects/Code/frontdesk
	directory = /home/jp/share/Projects/Code/control-panel
[gitlab]
	user = ody55eus
[commit]
	gpgsign = true
#+end_src

* Git Attributes
#+begin_src conf :tangle .config/git/attributes
*.lisp	diff=lisp
*.el	diff=lisp
*.org	diff=org
#+end_src
* Diff - Tool (ediff.sh)
See also [[https://github.com/paulotome/emacstool][Paulotome/Emacstool]].
#+begin_src sh :tangle .local/bin/ediff.sh :shebang #!/bin/sh
########
#### taken from github.com/paulotome/emacstool
####
#### add this in gitconfig
#### [diff]
####     tool = ediff
####     guitool = ediff
#### [difftool "ediff"]
####     cmd = /path/to/ediff.sh $LOCAL $REMOTE $MERGED
#### [merge]
####     tool = ediff
#### [mergetool "ediff"]
####     cmd = /path/to/ediff.sh $LOCAL $REMOTE $MERGED $BASE
####     trueExitCode = true

# test args
if [ ! ${#} -ge 2 ]; then
    echo 1>&2 "Usage: ${0} LOCAL REMOTE [MERGED BASE]"
    echo 1>&2 "       (LOCAL, REMOTE, MERGED, BASE can be provided by \`git mergetool'.)"
    exit 1
fi

# tools
_EMACSCLIENT="emacsclient"
_BASENAME="basename"
_CP="cp"
_MKTEMP="mktemp"
# args
_LOCAL=${1}
_REMOTE=${2}
if [ "${3}" ]; then
    _MERGED=${3}
else
    _MERGED=${_REMOTE}
fi
if [ "${4}" ] && [ -r "${4}" ]; then
    _BASE=${4}
    _EDIFF=ediff-merge-files-with-ancestor
    _EVAL="${_EDIFF} \"${_LOCAL}\" \"${_REMOTE}\" \"${_BASE}\" nil \"${_MERGED}\""
elif [ "${_REMOTE}" = "${_MERGED}" ]; then
    _EDIFF=ediff
    _EVAL="${_EDIFF} \"${_LOCAL}\" \"${_REMOTE}\""
else
    _EDIFF=ediff-merge-files
    _EVAL="${_EDIFF} \"${_LOCAL}\" \"${_REMOTE}\" nil \"${_MERGED}\""
fi

# console vs. X
if [ "${TERM}" = "linux" ]; then
    unset DISPLAY
    _EMACSCLIENTOPTS="-t"
else
    _EMACSCLIENTOPTS="-c"
fi

# run emacsclient
${_EMACSCLIENT} ${_EMACSCLIENTOPTS} -a "" -e "(${_EVAL})" 2>&1

# check modified file
if [ ! "$(grep -Ec '^(<<<<<<<|=======|>>>>>>>|####### Ancestor)' "${_MERGED}")" = 0 ]; then
    _MERGEDSAVE=$(${_MKTEMP} --tmpdir "$(${_BASENAME} "${_MERGED}")".XXXXXXXXXX)
    ${_CP} "${_MERGED}" "${_MERGEDSAVE}"
    echo 1>&2 "Oops! Conflict markers detected in $_MERGED."
    echo 1>&2 "Saved your changes to ${_MERGEDSAVE}"
    echo 1>&2 "Exiting with code 1."
    exit 1
fi

exit 0
#+end_src
